
import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;



public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        List<List<Integer>> arr = new ArrayList<>();

        IntStream.range(0, 6).forEach(i -> {
            try {
                arr.add(
                    Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
                        .map(Integer::parseInt)
                        .collect(toList())
                );
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        });
        int max = Integer.MIN_VALUE;
        System.out.println(arr.get(3).get(1));
        for(int i = 1; i< arr.size()-1; i++) {
            for(int j = 1; j< arr.size()-1; j++) {
                int top = arr.get(i-1).get(j-1) + arr.get(i-1).get(j) + arr.get(i-1).get(j+1);
                int middle = arr.get(i).get(j);
                
                int bottom = arr.get(i+1).get(j) + arr.get(i+1).get(j) + arr.get(i+1).get(j+1);
                
                int sum = top + middle + bottom;
                
                System.out.println(sum);
                
                if(sum > max) {
                    max = sum;
                }
            }
        }
        
        System.out.println(max);

        bufferedReader.close();
    }
}